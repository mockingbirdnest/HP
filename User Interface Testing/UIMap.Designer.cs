// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace User_Interface_Testing
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Launch - Use 'LaunchParams' to pass parameters into this method.
        /// </summary>
        public void Launch()
        {

            // Launch 'C:\Profiles\Redirection\phl\My Documents\My Projects\Mockingbird\HP2010\HP97\bin\Debug\Mockingbird.HP.HP97.exe'
            ApplicationUnderTest mockingbirdHPHP97Application = ApplicationUnderTest.Launch(this.LaunchParams.ExePath, this.LaunchParams.AlternateExePath);
        }
        
        /// <summary>
        /// Zero
        /// </summary>
        public void Zero()
        {
            #region Variable Declarations
            WinButton uIItem0Button = this.UIHP97Window.UIItem0Window.UIItem0Button;
            #endregion

            // Click '0' button
            Mouse.Click(uIItem0Button, new Point(88, 8));
        }
        
        /// <summary>
        /// One
        /// </summary>
        public void One()
        {
            #region Variable Declarations
            WinButton uIItem1Button = this.UIHP97Window.UIItem1Window.UIItem1Button;
            #endregion

            // Click '1' button
            Mouse.Click(uIItem1Button, new Point(44, 16));
        }
        
        /// <summary>
        /// Two
        /// </summary>
        public void Two()
        {
            #region Variable Declarations
            WinButton uIItem2Button = this.UIHP97Window.UIItem2Window.UIItem2Button;
            #endregion

            // Click '2' button
            Mouse.Click(uIItem2Button, new Point(31, 11));
        }
        
        /// <summary>
        /// Three
        /// </summary>
        public void Three()
        {
            #region Variable Declarations
            WinButton uIItem3Button = this.UIHP97Window.UIItem3Window.UIItem3Button;
            #endregion

            // Click '3' button
            Mouse.Click(uIItem3Button, new Point(29, 13));
        }
        
        /// <summary>
        /// Four
        /// </summary>
        public void Four()
        {
            #region Variable Declarations
            WinButton uIItem4Button = this.UIHP97Window.UIItem4Window.UIItem4Button;
            #endregion

            // Click '4' button
            Mouse.Click(uIItem4Button, new Point(37, 14));
        }
        
        /// <summary>
        /// Five
        /// </summary>
        public void Five()
        {
            #region Variable Declarations
            WinButton uIItem5Button = this.UIHP97Window.UIItem5Window.UIItem5Button;
            #endregion

            // Click '5' button
            Mouse.Click(uIItem5Button, new Point(25, 12));
        }
        
        /// <summary>
        /// Six
        /// </summary>
        public void Six()
        {
            #region Variable Declarations
            WinButton uIItem6Button = this.UIHP97Window.UIItem6Window.UIItem6Button;
            #endregion

            // Click '6' button
            Mouse.Click(uIItem6Button, new Point(17, 18));
        }
        
        /// <summary>
        /// Seven
        /// </summary>
        public void Seven()
        {
            #region Variable Declarations
            WinButton uIItem7Button = this.UIHP97Window.UIItem7Window.UIItem7Button;
            #endregion

            // Click '7' button
            Mouse.Click(uIItem7Button, new Point(25, 11));
        }
        
        /// <summary>
        /// Eight
        /// </summary>
        public void Eight()
        {
            #region Variable Declarations
            WinButton uIItem8Button = this.UIHP97Window.UIItem8Window.UIItem8Button;
            #endregion

            // Click '8' button
            Mouse.Click(uIItem8Button, new Point(25, 11));
        }
        
        /// <summary>
        /// Nine
        /// </summary>
        public void Nine()
        {
            #region Variable Declarations
            WinButton uIItem9Button = this.UIHP97Window.UIItem9Window.UIItem9Button;
            #endregion

            // Click '9' button
            Mouse.Click(uIItem9Button, new Point(37, 7));
        }
        
        /// <summary>
        /// Period
        /// </summary>
        public void Period()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIHP97Window.UIItemWindow.UIItemButton;
            #endregion

            // Click '・' button
            Mouse.Click(uIItemButton, new Point(33, 18));
        }
        
        /// <summary>
        /// Division
        /// </summary>
        public void Division()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIHP97Window.UIItemWindow1.UIItemButton;
            #endregion

            // Click '÷' button
            Mouse.Click(uIItemButton, new Point(15, 13));
        }
        
        /// <summary>
        /// Multiplication
        /// </summary>
        public void Multiplication()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIHP97Window.UIItemWindow2.UIItemButton;
            #endregion

            // Click '×' button
            Mouse.Click(uIItemButton, new Point(31, 26));
        }
        
        /// <summary>
        /// Subtraction
        /// </summary>
        public void Subtraction()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIHP97Window.UIItemWindow3.UIItemButton;
            #endregion

            // Click '-' button
            Mouse.Click(uIItemButton, new Point(23, 23));
        }
        
        /// <summary>
        /// Addition
        /// </summary>
        public void Addition()
        {
            #region Variable Declarations
            WinButton uIItemButton = this.UIHP97Window.UIItemWindow4.UIItemButton;
            #endregion

            // Click '+' button
            Mouse.Click(uIItemButton, new Point(39, 70));
        }
        
        /// <summary>
        /// Enter
        /// </summary>
        public void Enter()
        {
            #region Variable Declarations
            WinButton uIENTERButton = this.UIHP97Window.UIENTERWindow.UIENTERButton;
            #endregion

            // Click 'ENTER ↑' button
            Mouse.Click(uIENTERButton, new Point(73, 11));
        }
        
        /// <summary>
        /// ManTraceNorm2Left
        /// </summary>
        public void ManTraceNorm2Left()
        {
            #region Variable Declarations
            WinButton uINORMButton = this.UIHP97Window.UIButtonWindow.UINORMButton;
            WinText uIMANText = this.UIHP97Window.UIMANWindow.UIMANText;
            #endregion

            // Move 'NORM' button from (9, 5) to 'MAN' label (55, 3)
            uIMANText.EnsureClickable(new Point(55, 3));
            Mouse.StartDragging(uINORMButton, new Point(9, 5));
            Mouse.StopDragging(uIMANText, new Point(55, 3));
        }
        
        /// <summary>
        /// ManTraceNorm2Right
        /// </summary>
        public void ManTraceNorm2Right()
        {
            #region Variable Declarations
            WinButton uINORMButton = this.UIHP97Window.UIButtonWindow.UINORMButton;
            WinText uINORMText = this.UIHP97Window.UINORMWindow.UINORMText;
            #endregion

            // Move 'NORM' button from (15, 1) to 'NORM' label (5, 5)
            uINORMText.EnsureClickable(new Point(5, 5));
            Mouse.StartDragging(uINORMButton, new Point(15, 1));
            Mouse.StopDragging(uINORMText, new Point(5, 5));
        }
        
        /// <summary>
        /// Square
        /// </summary>
        public void Square()
        {
            #region Variable Declarations
            WinButton uIXButton = this.UIHP97Window.UIXWindow.UIXButton;
            #endregion

            // Click 'x²' button
            Mouse.Click(uIXButton, new Point(15, 12));
        }
        
        /// <summary>
        /// Close
        /// </summary>
        public void Close()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UIHP97Window.UIHP97TitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(8, 8));
        }
        
        /// <summary>
        /// AssertNumeric - Use 'AssertNumericExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNumeric()
        {
            #region Variable Declarations
            WinEdit uINumericTextBoxEdit = this.UIHP97Window.UIItem000Window.UINumericTextBoxEdit;
            #endregion

            // Verify that 'numericTextBox' text box's property 'Text' equals ''
            Assert.AreEqual(this.AssertNumericExpectedValues.UINumericTextBoxEditText, uINumericTextBoxEdit.Text);
        }
        
        /// <summary>
        /// F
        /// </summary>
        public void F()
        {
            #region Variable Declarations
            WinButton uIFButton = this.UIHP97Window.UIFWindow.UIFButton;
            #endregion

            // Click 'f' button
            Mouse.Click(uIFButton, new Point(24, 10));
        }
        
        /// <summary>
        /// Sin
        /// </summary>
        public void Sin()
        {
            #region Variable Declarations
            WinButton uISINButton = this.UIHP97Window.UISINWindow.UISINButton;
            #endregion

            // Click 'SIN' button
            Mouse.Click(uISINButton, new Point(29, 17));
        }
        
        /// <summary>
        /// Reciprocal
        /// </summary>
        public void Reciprocal()
        {
            #region Variable Declarations
            WinButton uIItem1xButton = this.UIHP97Window.UIItem1xWindow.UIItem1xButton;
            #endregion

            // Click '1/x' button
            Mouse.Click(uIItem1xButton, new Point(23, 19));
        }
        
        /// <summary>
        /// DisplayX
        /// </summary>
        public void DisplayX()
        {
            #region Variable Declarations
            WinButton uIPRINTxButton = this.UIHP97Window.UIPRINTxWindow.UIPRINTxButton;
            #endregion

            // Click 'PRINT x' button
            Mouse.Click(uIPRINTxButton, new Point(65, 13));
        }
        
        /// <summary>
        /// ZeroZero
        /// </summary>
        public void ZeroZero()
        {
            #region Variable Declarations
            WinButton uIItem0Button = this.UIHP97Window.UIItem0Window.UIItem0Button;
            #endregion

            // Double-Click '0' button
            Mouse.DoubleClick(uIItem0Button, new Point(53, 14));
        }
        
        /// <summary>
        /// AssertPrinterLine0 - Use 'AssertPrinterLine0ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPrinterLine0()
        {
            #region Variable Declarations
            WinListItem uIItemListItem = this.UIHP97Window.UIListBoxWindow.UIItemListItem;
            #endregion

            // Verify that list item numbered 7 in 'listBox' window's property 'DisplayText' equals ''
            Assert.AreEqual(this.AssertPrinterLine0ExpectedValues.UIItemListItemDisplayText, uIItemListItem.DisplayText);
        }
        
        /// <summary>
        /// AssertPrinterLine1 - Use 'AssertPrinterLine1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPrinterLine1()
        {
            #region Variable Declarations
            WinListItem uIItemListItem1 = this.UIHP97Window.UIListBoxWindow.UIItemListItem1;
            #endregion

            // Verify that list item numbered 6 in 'listBox' window's property 'DisplayText' equals ''
            Assert.AreEqual(this.AssertPrinterLine1ExpectedValues.UIItemListItem1DisplayText, uIItemListItem1.DisplayText);
        }
        
        /// <summary>
        /// AssertPrinterLine2 - Use 'AssertPrinterLine2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPrinterLine2()
        {
            #region Variable Declarations
            WinListItem uIItemListItem2 = this.UIHP97Window.UIListBoxWindow.UIItemListItem2;
            #endregion

            // Verify that list item numbered 5 in 'listBox' window's property 'DisplayText' equals ''
            Assert.AreEqual(this.AssertPrinterLine2ExpectedValues.UIItemListItem2DisplayText, uIItemListItem2.DisplayText);
        }
        
        /// <summary>
        /// AssertPrinterLine3 - Use 'AssertPrinterLine3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertPrinterLine3()
        {
            #region Variable Declarations
            WinListItem uIItemListItem3 = this.UIHP97Window.UIListBoxWindow.UIItemListItem3;
            #endregion

            // Verify that list item numbered 4 in 'listBox' window's property 'DisplayText' equals ''
            Assert.AreEqual(this.AssertPrinterLine3ExpectedValues.UIItemListItem3DisplayText, uIItemListItem3.DisplayText);
        }
        
        /// <summary>
        /// CHS
        /// </summary>
        public void CHS()
        {
            #region Variable Declarations
            WinButton uICHSButton = this.UIHP97Window.UICHSWindow.UICHSButton;
            #endregion

            // Click 'CHS' button
            Mouse.Click(uICHSButton, new Point(29, 16));
        }
        
        #region Properties
        public virtual LaunchParams LaunchParams
        {
            get
            {
                if ((this.mLaunchParams == null))
                {
                    this.mLaunchParams = new LaunchParams();
                }
                return this.mLaunchParams;
            }
        }
        
        public virtual AssertNumericExpectedValues AssertNumericExpectedValues
        {
            get
            {
                if ((this.mAssertNumericExpectedValues == null))
                {
                    this.mAssertNumericExpectedValues = new AssertNumericExpectedValues();
                }
                return this.mAssertNumericExpectedValues;
            }
        }
        
        public virtual AssertPrinterLine0ExpectedValues AssertPrinterLine0ExpectedValues
        {
            get
            {
                if ((this.mAssertPrinterLine0ExpectedValues == null))
                {
                    this.mAssertPrinterLine0ExpectedValues = new AssertPrinterLine0ExpectedValues();
                }
                return this.mAssertPrinterLine0ExpectedValues;
            }
        }
        
        public virtual AssertPrinterLine1ExpectedValues AssertPrinterLine1ExpectedValues
        {
            get
            {
                if ((this.mAssertPrinterLine1ExpectedValues == null))
                {
                    this.mAssertPrinterLine1ExpectedValues = new AssertPrinterLine1ExpectedValues();
                }
                return this.mAssertPrinterLine1ExpectedValues;
            }
        }
        
        public virtual AssertPrinterLine2ExpectedValues AssertPrinterLine2ExpectedValues
        {
            get
            {
                if ((this.mAssertPrinterLine2ExpectedValues == null))
                {
                    this.mAssertPrinterLine2ExpectedValues = new AssertPrinterLine2ExpectedValues();
                }
                return this.mAssertPrinterLine2ExpectedValues;
            }
        }
        
        public virtual AssertPrinterLine3ExpectedValues AssertPrinterLine3ExpectedValues
        {
            get
            {
                if ((this.mAssertPrinterLine3ExpectedValues == null))
                {
                    this.mAssertPrinterLine3ExpectedValues = new AssertPrinterLine3ExpectedValues();
                }
                return this.mAssertPrinterLine3ExpectedValues;
            }
        }
        
        public UIHP97Window UIHP97Window
        {
            get
            {
                if ((this.mUIHP97Window == null))
                {
                    this.mUIHP97Window = new UIHP97Window();
                }
                return this.mUIHP97Window;
            }
        }
        #endregion
        
        #region Fields
        private LaunchParams mLaunchParams;
        
        private AssertNumericExpectedValues mAssertNumericExpectedValues;
        
        private AssertPrinterLine0ExpectedValues mAssertPrinterLine0ExpectedValues;
        
        private AssertPrinterLine1ExpectedValues mAssertPrinterLine1ExpectedValues;
        
        private AssertPrinterLine2ExpectedValues mAssertPrinterLine2ExpectedValues;
        
        private AssertPrinterLine3ExpectedValues mAssertPrinterLine3ExpectedValues;
        
        private UIHP97Window mUIHP97Window;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Launch'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class LaunchParams
    {
        
        #region Fields
        /// <summary>
        /// Launch 'C:\Profiles\Redirection\phl\My Documents\My Projects\Mockingbird\HP2010\HP97\bin\Debug\Mockingbird.HP.HP97.exe'
        /// </summary>
        public string ExePath = "C:\\Profiles\\Redirection\\phl\\My Documents\\My Projects\\Mockingbird\\HP2010\\HP97\\bin\\" +
            "Debug\\Mockingbird.HP.HP97.exe";
        
        /// <summary>
        /// Launch 'C:\Profiles\Redirection\phl\My Documents\My Projects\Mockingbird\HP2010\HP97\bin\Debug\Mockingbird.HP.HP97.exe'
        /// </summary>
        public string AlternateExePath = "C:\\Profiles\\Redirection\\phl\\My Documents\\My Projects\\Mockingbird\\HP2010\\HP97\\bin\\" +
            "Debug\\Mockingbird.HP.HP97.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNumeric'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertNumericExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'numericTextBox' text box's property 'Text' equals ''
        /// </summary>
        public string UINumericTextBoxEditText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPrinterLine0'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertPrinterLine0ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that list item numbered 7 in 'listBox' window's property 'DisplayText' equals ''
        /// </summary>
        public string UIItemListItemDisplayText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPrinterLine1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertPrinterLine1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that list item numbered 6 in 'listBox' window's property 'DisplayText' equals ''
        /// </summary>
        public string UIItemListItem1DisplayText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPrinterLine2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertPrinterLine2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that list item numbered 5 in 'listBox' window's property 'DisplayText' equals ''
        /// </summary>
        public string UIItemListItem2DisplayText = "";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertPrinterLine3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertPrinterLine3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that list item numbered 4 in 'listBox' window's property 'DisplayText' equals ''
        /// </summary>
        public string UIItemListItem3DisplayText = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHP97Window : WinWindow
    {
        
        public UIHP97Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "HP-97";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UIItem1Window UIItem1Window
        {
            get
            {
                if ((this.mUIItem1Window == null))
                {
                    this.mUIItem1Window = new UIItem1Window(this);
                }
                return this.mUIItem1Window;
            }
        }
        
        public UIItem2Window UIItem2Window
        {
            get
            {
                if ((this.mUIItem2Window == null))
                {
                    this.mUIItem2Window = new UIItem2Window(this);
                }
                return this.mUIItem2Window;
            }
        }
        
        public UIItem3Window UIItem3Window
        {
            get
            {
                if ((this.mUIItem3Window == null))
                {
                    this.mUIItem3Window = new UIItem3Window(this);
                }
                return this.mUIItem3Window;
            }
        }
        
        public UIItem4Window UIItem4Window
        {
            get
            {
                if ((this.mUIItem4Window == null))
                {
                    this.mUIItem4Window = new UIItem4Window(this);
                }
                return this.mUIItem4Window;
            }
        }
        
        public UIItem5Window UIItem5Window
        {
            get
            {
                if ((this.mUIItem5Window == null))
                {
                    this.mUIItem5Window = new UIItem5Window(this);
                }
                return this.mUIItem5Window;
            }
        }
        
        public UIItem6Window UIItem6Window
        {
            get
            {
                if ((this.mUIItem6Window == null))
                {
                    this.mUIItem6Window = new UIItem6Window(this);
                }
                return this.mUIItem6Window;
            }
        }
        
        public UIItem7Window UIItem7Window
        {
            get
            {
                if ((this.mUIItem7Window == null))
                {
                    this.mUIItem7Window = new UIItem7Window(this);
                }
                return this.mUIItem7Window;
            }
        }
        
        public UIItem8Window UIItem8Window
        {
            get
            {
                if ((this.mUIItem8Window == null))
                {
                    this.mUIItem8Window = new UIItem8Window(this);
                }
                return this.mUIItem8Window;
            }
        }
        
        public UIItem9Window UIItem9Window
        {
            get
            {
                if ((this.mUIItem9Window == null))
                {
                    this.mUIItem9Window = new UIItem9Window(this);
                }
                return this.mUIItem9Window;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UIItemWindow3 UIItemWindow3
        {
            get
            {
                if ((this.mUIItemWindow3 == null))
                {
                    this.mUIItemWindow3 = new UIItemWindow3(this);
                }
                return this.mUIItemWindow3;
            }
        }
        
        public UIItemWindow4 UIItemWindow4
        {
            get
            {
                if ((this.mUIItemWindow4 == null))
                {
                    this.mUIItemWindow4 = new UIItemWindow4(this);
                }
                return this.mUIItemWindow4;
            }
        }
        
        public UIENTERWindow UIENTERWindow
        {
            get
            {
                if ((this.mUIENTERWindow == null))
                {
                    this.mUIENTERWindow = new UIENTERWindow(this);
                }
                return this.mUIENTERWindow;
            }
        }
        
        public UIButtonWindow UIButtonWindow
        {
            get
            {
                if ((this.mUIButtonWindow == null))
                {
                    this.mUIButtonWindow = new UIButtonWindow(this);
                }
                return this.mUIButtonWindow;
            }
        }
        
        public UIMANWindow UIMANWindow
        {
            get
            {
                if ((this.mUIMANWindow == null))
                {
                    this.mUIMANWindow = new UIMANWindow(this);
                }
                return this.mUIMANWindow;
            }
        }
        
        public UINORMWindow UINORMWindow
        {
            get
            {
                if ((this.mUINORMWindow == null))
                {
                    this.mUINORMWindow = new UINORMWindow(this);
                }
                return this.mUINORMWindow;
            }
        }
        
        public UIXWindow UIXWindow
        {
            get
            {
                if ((this.mUIXWindow == null))
                {
                    this.mUIXWindow = new UIXWindow(this);
                }
                return this.mUIXWindow;
            }
        }
        
        public UIHP97TitleBar UIHP97TitleBar
        {
            get
            {
                if ((this.mUIHP97TitleBar == null))
                {
                    this.mUIHP97TitleBar = new UIHP97TitleBar(this);
                }
                return this.mUIHP97TitleBar;
            }
        }
        
        public UIItem000Window UIItem000Window
        {
            get
            {
                if ((this.mUIItem000Window == null))
                {
                    this.mUIItem000Window = new UIItem000Window(this);
                }
                return this.mUIItem000Window;
            }
        }
        
        public UIFWindow UIFWindow
        {
            get
            {
                if ((this.mUIFWindow == null))
                {
                    this.mUIFWindow = new UIFWindow(this);
                }
                return this.mUIFWindow;
            }
        }
        
        public UISINWindow UISINWindow
        {
            get
            {
                if ((this.mUISINWindow == null))
                {
                    this.mUISINWindow = new UISINWindow(this);
                }
                return this.mUISINWindow;
            }
        }
        
        public UIItem1xWindow UIItem1xWindow
        {
            get
            {
                if ((this.mUIItem1xWindow == null))
                {
                    this.mUIItem1xWindow = new UIItem1xWindow(this);
                }
                return this.mUIItem1xWindow;
            }
        }
        
        public UIPRINTxWindow UIPRINTxWindow
        {
            get
            {
                if ((this.mUIPRINTxWindow == null))
                {
                    this.mUIPRINTxWindow = new UIPRINTxWindow(this);
                }
                return this.mUIPRINTxWindow;
            }
        }
        
        public UIListBoxWindow UIListBoxWindow
        {
            get
            {
                if ((this.mUIListBoxWindow == null))
                {
                    this.mUIListBoxWindow = new UIListBoxWindow(this);
                }
                return this.mUIListBoxWindow;
            }
        }
        
        public UICHSWindow UICHSWindow
        {
            get
            {
                if ((this.mUICHSWindow == null))
                {
                    this.mUICHSWindow = new UICHSWindow(this);
                }
                return this.mUICHSWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItem0Window mUIItem0Window;
        
        private UIItem1Window mUIItem1Window;
        
        private UIItem2Window mUIItem2Window;
        
        private UIItem3Window mUIItem3Window;
        
        private UIItem4Window mUIItem4Window;
        
        private UIItem5Window mUIItem5Window;
        
        private UIItem6Window mUIItem6Window;
        
        private UIItem7Window mUIItem7Window;
        
        private UIItem8Window mUIItem8Window;
        
        private UIItem9Window mUIItem9Window;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UIItemWindow3 mUIItemWindow3;
        
        private UIItemWindow4 mUIItemWindow4;
        
        private UIENTERWindow mUIENTERWindow;
        
        private UIButtonWindow mUIButtonWindow;
        
        private UIMANWindow mUIMANWindow;
        
        private UINORMWindow mUINORMWindow;
        
        private UIXWindow mUIXWindow;
        
        private UIHP97TitleBar mUIHP97TitleBar;
        
        private UIItem000Window mUIItem000Window;
        
        private UIFWindow mUIFWindow;
        
        private UISINWindow mUISINWindow;
        
        private UIItem1xWindow mUIItem1xWindow;
        
        private UIPRINTxWindow mUIPRINTxWindow;
        
        private UIListBoxWindow mUIListBoxWindow;
        
        private UICHSWindow mUICHSWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "26";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem0Button
        {
            get
            {
                if ((this.mUIItem0Button == null))
                {
                    this.mUIItem0Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem0Button.SearchProperties[WinButton.PropertyNames.Name] = "0";
                    this.mUIItem0Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem0Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem0Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem1Window : WinWindow
    {
        
        public UIItem1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "21";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem1Button
        {
            get
            {
                if ((this.mUIItem1Button == null))
                {
                    this.mUIItem1Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1Button.SearchProperties[WinButton.PropertyNames.Name] = "1";
                    this.mUIItem1Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem1Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem1Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem2Window : WinWindow
    {
        
        public UIItem2Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "18";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem2Button
        {
            get
            {
                if ((this.mUIItem2Button == null))
                {
                    this.mUIItem2Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem2Button.SearchProperties[WinButton.PropertyNames.Name] = "2";
                    this.mUIItem2Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem2Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem2Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem3Window : WinWindow
    {
        
        public UIItem3Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "15";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem3Button
        {
            get
            {
                if ((this.mUIItem3Button == null))
                {
                    this.mUIItem3Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem3Button.SearchProperties[WinButton.PropertyNames.Name] = "3";
                    this.mUIItem3Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem3Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem3Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem4Window : WinWindow
    {
        
        public UIItem4Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "20";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem4Button
        {
            get
            {
                if ((this.mUIItem4Button == null))
                {
                    this.mUIItem4Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem4Button.SearchProperties[WinButton.PropertyNames.Name] = "4";
                    this.mUIItem4Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem4Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem4Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem5Window : WinWindow
    {
        
        public UIItem5Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "17";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem5Button
        {
            get
            {
                if ((this.mUIItem5Button == null))
                {
                    this.mUIItem5Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem5Button.SearchProperties[WinButton.PropertyNames.Name] = "5";
                    this.mUIItem5Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem5Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem5Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem6Window : WinWindow
    {
        
        public UIItem6Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "14";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem6Button
        {
            get
            {
                if ((this.mUIItem6Button == null))
                {
                    this.mUIItem6Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem6Button.SearchProperties[WinButton.PropertyNames.Name] = "6";
                    this.mUIItem6Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem6Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem6Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem7Window : WinWindow
    {
        
        public UIItem7Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "22";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem7Button
        {
            get
            {
                if ((this.mUIItem7Button == null))
                {
                    this.mUIItem7Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem7Button.SearchProperties[WinButton.PropertyNames.Name] = "7";
                    this.mUIItem7Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem7Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem7Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem8Window : WinWindow
    {
        
        public UIItem8Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "19";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem8Button
        {
            get
            {
                if ((this.mUIItem8Button == null))
                {
                    this.mUIItem8Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem8Button.SearchProperties[WinButton.PropertyNames.Name] = "8";
                    this.mUIItem8Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem8Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem8Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem9Window : WinWindow
    {
        
        public UIItem9Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "16";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem9Button
        {
            get
            {
                if ((this.mUIItem9Button == null))
                {
                    this.mUIItem9Button = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem9Button.SearchProperties[WinButton.PropertyNames.Name] = "9";
                    this.mUIItem9Button.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem9Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem9Button;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "10";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = " ・";
                    this.mUIItemButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "13";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "÷";
                    this.mUIItemButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "×";
                    this.mUIItemButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow3 : WinWindow
    {
        
        public UIItemWindow3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "12";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "-";
                    this.mUIItemButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow4 : WinWindow
    {
        
        public UIItemWindow4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "8";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItemButton.SearchProperties[WinButton.PropertyNames.Name] = "+";
                    this.mUIItemButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIENTERWindow : WinWindow
    {
        
        public UIENTERWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "6";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIENTERButton
        {
            get
            {
                if ((this.mUIENTERButton == null))
                {
                    this.mUIENTERButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIENTERButton.SearchProperties[WinButton.PropertyNames.Name] = "ENTER ↑";
                    this.mUIENTERButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIENTERButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIENTERButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIButtonWindow : WinWindow
    {
        
        public UIButtonWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "45";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UINORMButton
        {
            get
            {
                if ((this.mUINORMButton == null))
                {
                    this.mUINORMButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINORMButton.SearchProperties[WinButton.PropertyNames.Name] = "NORM";
                    this.mUINORMButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUINORMButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINORMButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMANWindow : WinWindow
    {
        
        public UIMANWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "leftLabel";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinText UIMANText
        {
            get
            {
                if ((this.mUIMANText == null))
                {
                    this.mUIMANText = new WinText(this);
                    #region Search Criteria
                    this.mUIMANText.SearchProperties[WinText.PropertyNames.Name] = "MAN";
                    this.mUIMANText.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIMANText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIMANText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINORMWindow : WinWindow
    {
        
        public UINORMWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "rightLabel";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinText UINORMText
        {
            get
            {
                if ((this.mUINORMText == null))
                {
                    this.mUINORMText = new WinText(this);
                    #region Search Criteria
                    this.mUINORMText.SearchProperties[WinText.PropertyNames.Name] = "NORM";
                    this.mUINORMText.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUINORMText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUINORMText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIXWindow : WinWindow
    {
        
        public UIXWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "30";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIXButton
        {
            get
            {
                if ((this.mUIXButton == null))
                {
                    this.mUIXButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIXButton.SearchProperties[WinButton.PropertyNames.Name] = "x²";
                    this.mUIXButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIXButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIXButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHP97TitleBar : WinTitleBar
    {
        
        public UIHP97TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem000Window : WinWindow
    {
        
        public UIItem000Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "numericTextBox";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinEdit UINumericTextBoxEdit
        {
            get
            {
                if ((this.mUINumericTextBoxEdit == null))
                {
                    this.mUINumericTextBoxEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUINumericTextBoxEdit.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUINumericTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINumericTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIFWindow : WinWindow
    {
        
        public UIFWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "53";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIFButton
        {
            get
            {
                if ((this.mUIFButton == null))
                {
                    this.mUIFButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFButton.SearchProperties[WinButton.PropertyNames.Name] = "f";
                    this.mUIFButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIFButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIFButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UISINWindow : WinWindow
    {
        
        public UISINWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "38";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UISINButton
        {
            get
            {
                if ((this.mUISINButton == null))
                {
                    this.mUISINButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISINButton.SearchProperties[WinButton.PropertyNames.Name] = "SIN";
                    this.mUISINButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUISINButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISINButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItem1xWindow : WinWindow
    {
        
        public UIItem1xWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "28";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIItem1xButton
        {
            get
            {
                if ((this.mUIItem1xButton == null))
                {
                    this.mUIItem1xButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIItem1xButton.SearchProperties[WinButton.PropertyNames.Name] = "1/x";
                    this.mUIItem1xButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItem1xButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIItem1xButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIPRINTxWindow : WinWindow
    {
        
        public UIPRINTxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UIPRINTxButton
        {
            get
            {
                if ((this.mUIPRINTxButton == null))
                {
                    this.mUIPRINTxButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIPRINTxButton.SearchProperties[WinButton.PropertyNames.Name] = "PRINT x";
                    this.mUIPRINTxButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIPRINTxButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIPRINTxButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIListBoxWindow : WinWindow
    {
        
        public UIListBoxWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "listBox";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinListItem UIItemListItem
        {
            get
            {
                if ((this.mUIItemListItem == null))
                {
                    this.mUIItemListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem.SearchProperties[WinListItem.PropertyNames.Instance] = "7";
                    this.mUIItemListItem.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemListItem;
            }
        }
        
        public WinListItem UIItemListItem1
        {
            get
            {
                if ((this.mUIItemListItem1 == null))
                {
                    this.mUIItemListItem1 = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem1.SearchProperties[WinListItem.PropertyNames.Instance] = "6";
                    this.mUIItemListItem1.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemListItem1;
            }
        }
        
        public WinListItem UIItemListItem2
        {
            get
            {
                if ((this.mUIItemListItem2 == null))
                {
                    this.mUIItemListItem2 = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem2.SearchProperties[WinListItem.PropertyNames.Instance] = "5";
                    this.mUIItemListItem2.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemListItem2;
            }
        }
        
        public WinListItem UIItemListItem3
        {
            get
            {
                if ((this.mUIItemListItem3 == null))
                {
                    this.mUIItemListItem3 = new WinListItem(this);
                    #region Search Criteria
                    this.mUIItemListItem3.SearchProperties[WinListItem.PropertyNames.Instance] = "4";
                    this.mUIItemListItem3.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUIItemListItem3;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIItemListItem;
        
        private WinListItem mUIItemListItem1;
        
        private WinListItem mUIItemListItem2;
        
        private WinListItem mUIItemListItem3;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICHSWindow : WinWindow
    {
        
        public UICHSWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "button";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("HP-97");
            #endregion
        }
        
        #region Properties
        public WinButton UICHSButton
        {
            get
            {
                if ((this.mUICHSButton == null))
                {
                    this.mUICHSButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICHSButton.SearchProperties[WinButton.PropertyNames.Name] = "CHS";
                    this.mUICHSButton.WindowTitles.Add("HP-97");
                    #endregion
                }
                return this.mUICHSButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICHSButton;
        #endregion
    }
}
